redis:
  username: ${REDIS_USER}
  password: ${REDIS_PASSWORD}
server:
  port: ${PORT}
  ssl:
    enabled: false
logging:
  level:
    org:
      springframework:
        security:
          TRACE
spring:
  data:
    mongodb:
      ssl: false
      database: ${MONGO_DATABASE}
      username: ${MONGO_USER}
      password: ${MONGO_PASSWORD}
      host: ${MONGO_HOST}
      port: ${MONGO_PORT}
  session:
    redis:
      repository-type: default
      expiration: 60
      host: ${REDIS_HOST}
    timeout: 1m

local:
  jwt:
    secretKey: ${JWT_KEY}
    payloadKey: ${JWT_PAYLOAD_KEY} 
  client:
    registration:
      secret: ${CLIENT_REGISTRATION_SECRET}
  email:
    mode: smtp       # "ses" or "smtp"
    smtp:
      host:  ${EMAIL_HOST}
      port: ${EMAIL_PORT}
      username: ${EMAIL_USERNAME}
      password: ${EMAIL_PASSWORD}
  aws:
    accessKey: ${AWS_S3_ACCESS_KEY}
    secretKey: ${AWS_S3_SECRET_KEY}
    ses:
      region: ${AWS_REGION}
    s3:
      bucket: ${AWS_S3_BUCKET}
      endpoint: ${AWS_S3_ENDPOINT}  # e.g., http://localhost:9000 for MinIO
      region: ${AWS_REGION}